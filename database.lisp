(in-package :sento-user)

(defvar *system* (make-actor-system))
(defvar *db-agent* nil)

(defvar +db-name+ "cve-hunt")

(defparameter +db-user+ (uiop:getenv "CVE_HUNT_DB_USER"))
(defparameter +db-password+  (uiop:getenv "CVE_HUNT_DB_PASSWORD"))
(defparameter +db-host+ (uiop:getenv "CVE_HUNT_DB_HOST"))
(defparameter +db-port+ 5984)

(defun init-db-agent ()
  (setf *db-agent* (make-agent (lambda ()
                                 (let ((db
                                         (cl-couch:new-couchdb +db-host+ +db-port+)))
                                   (cl-couch:password-auth db +db-user+ +db-password+)

                                   db)))))

(defun start-login-refresher (sleep-time)
  (bt:make-thread
   (lambda ()
     (loop
       do (progn
            (init-db-agent)
            (sleep sleep-time))))
   :name "Login Refresher"))

;; TODO Look into why couchdb isnt letting me stay logged in
;; TODO Also maybe look into a single thread for sending tasks
(defun setup-db ()
  (start-login-refresher 60))
(defun get-db () (agent-get *db-agent* #'identity))
(defvar *bulk-inserts*
  (actor-of *system* :name "bulk-insert-documents"
                     :receive
                     (lambda (msg)
                       (let ((db (get-db)))
                         (cl-couch:bulk-create-documents db +db-name+ msg))))
  "Inerts documents in bulk")



(defvar *insert-document* (actor-of *system* :name "insert-document"
                                             :receive
                                             (lambda (msg)
                                               (let ((db (get-db)))
                                                 (format t "~a" (jsown:to-json* msg))
                                                 (cl-couch:create-document db +db-name+ (jsown:to-json* msg)))))

  "Actor inserts documents")



(defvar *upsert-document*
  (actor-of *system* :name "upsert-document"
                     :receive
                     (lambda (msg)
                       (let* ((db (get-db))
                              (old-rev (jsown:val  (cl-couch:get-document* db +db-name+ (jsown:val msg "_id")) "_rev")))
                         (cl-couch:create-document db +db-name+ (jsown:to-json (jsown:extend-js msg ("_rev" old-rev))))))))
